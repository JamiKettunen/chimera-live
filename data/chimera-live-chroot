#!/bin/sh
#
# Chimera Linux live chroot tool
#
# Copyright 2023 Daniel "q66" Kolesa
#
# License: BSD-2-Clause
#
# This is a simple script to safely chroot into Chimera installations, where
# things such as pseudo-filesystem mounts are properly taken care of. While
# all of the steps here can be performed manually, this helper is supposed
# to make it more convenient.
#

readonly PROGNAME=$(basename "$0")
readonly SRC_ROOT="/run/live/rootfs/filesystem.squashfs"
ROOT_DIR=

usage() {
    cat <<EOF
Usage: $PROGNAME target_directory

This program chroots into the target_directory, while ensuring that every
step necessary for that is taken (e.g. pseudo-filesystem mounts).
EOF
    exit ${1:=1}
}

if [ "$1" = "-h" -o "$1" = "--help" ]; then
    usage 0
fi

MOUNTED_PSEUDO=

do_trymount() {
    if mountpoint -q "${ROOT_DIR}/$1" > /dev/null 2>&1; then
        return 0
    fi
    mount --rbind "/$1" "${ROOT_DIR}/$1" || die "Failed to mount ${1}fs"
    MOUNTED_PSEUDO="${MOUNTED_PSEUDO} $1"
}

mount_pseudo() {
    do_trymount dev
    do_trymount proc
    do_trymount sys
    do_trymount tmp
}

umount_pseudo() {
    sync
    for mnt in ${MOUNTED_PSEUDO}; do
        [ -n "$mnt" ] || continue
        umount -R -f "${ROOT_DIR}/$mnt" > /dev/null 2>&1
    done
}

error_sig() {
    umount_pseudo
    exit ${1:=0}
}

trap 'error_sig $? $LINENO' INT TERM 0

die() {
    echo "ERROR: $@"
    error_sig 1 $LINENO
}

# ensure we run as root
if [ "$(id -u)" != "0" ]; then
    die "Must run this as root."
fi

# ensure source exists
if [ ! -d "${SRC_ROOT}" ]; then
    die "Source root does not exist; pplease run this on live media."
fi

ROOT_DIR="$1"
shift

# ensure the target exists
if [ ! -d "$ROOT_DIR" ]; then
    die "The target directory does not exist."
    usage
fi

mount_pseudo

if [ -d "${ROOT_DIR}/etc" -a -f /etc/resolv.conf ]; then
    cp /etc/resolv.conf "$ROOT_DIR/etc"
fi

echo "Now switching root to '$ROOT_DIR'."
chroot "$ROOT_DIR" "$@"
RC=$?

umount_pseudo

exit $RC
